{"ast":null,"code":"import _classCallCheck from \"/Users/tekion/Documents/React/react-assignment/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tekion/Documents/React/react-assignment/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tekion/Documents/React/react-assignment/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tekion/Documents/React/react-assignment/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tekion/Documents/React/react-assignment/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tekion/Documents/React/react-assignment/src/App.js\";\nimport React, { Component } from 'react';\nimport './App.css';\nimport ListTemplate from './ListTemplate/ListTemplate.js';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      listOfObjects: \"TWO\"\n    };\n\n    _this.addButtonHandler = function () {\n      var textValue = document.getElementById('text-box').value;\n\n      if (textValue) {\n        _this.setState({\n          listOfObjects: \"three\"\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        id: \"text-input\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        id: \"text-box\",\n        placeholder: \"Write something to add\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }), React.createElement(\"button\", {\n        id: \"btn-add\",\n        className: \"input-button\",\n        onClick: this.addButtonHandler,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Add\"), React.createElement(\"button\", {\n        id: \"btn-select-all\",\n        className: \"input-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, \"Select/Deselect All\"), React.createElement(\"button\", {\n        id: \"btn-delete-selected\",\n        className: \"input-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }, \"Delete Selected\"), React.createElement(\"button\", {\n        id: \"btn-delete-completed\",\n        className: \"input-button\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, \"Delete Completed\")), React.createElement(\"div\", {\n        id: \"list-container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(ListTemplate, {\n        text: this.state.listOfObjects,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/tekion/Documents/React/react-assignment/src/App.js"],"names":["React","Component","ListTemplate","App","state","listOfObjects","addButtonHandler","textValue","document","getElementById","value","setState"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,YAAP,MAAyB,gCAAzB;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,aAAa,EAAE;AADT,K;;UAIPC,gB,GAAmB,YAAM;AACxB,UAAIC,SAAS,GAAEC,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAAnD;;AACA,UAAGH,SAAH,EAAc;AACZ,cAAKI,QAAL,CAAc;AAACN,UAAAA,aAAa,EAAE;AAAhB,SAAd;AACD;AACF,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEE;AAAK,QAAA,EAAE,EAAC,YAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,EAAE,EAAC,UAAtB;AAAiC,QAAA,WAAW,EAAC,wBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI;AAAQ,QAAA,EAAE,EAAC,SAAX;AAAqB,QAAA,SAAS,EAAC,cAA/B;AAA6C,QAAA,OAAO,EAAE,KAAKC,gBAA3D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAQ,QAAA,EAAE,EAAC,gBAAX;AAA4B,QAAA,SAAS,EAAC,cAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAHJ,EAII;AAAQ,QAAA,EAAE,EAAC,qBAAX;AAAiC,QAAA,SAAS,EAAC,cAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJJ,EAKI;AAAQ,QAAA,EAAE,EAAC,sBAAX;AAAkC,QAAA,SAAS,EAAC,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BALJ,CAFF,EAUE;AAAK,QAAA,EAAE,EAAC,gBAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,YAAD;AAAc,QAAA,IAAI,EAAE,KAAKF,KAAL,CAAWC,aAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,CAVF,CADF;AAgBD;;;;EA9BeJ,S;;AAiClB,eAAeE,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\nimport ListTemplate from './ListTemplate/ListTemplate.js';\n\nclass App extends Component {\n\n  state = {\n    listOfObjects: \"TWO\"\n  }\n\n   addButtonHandler = () => {\n    let textValue= document.getElementById('text-box').value;\n    if(textValue) {\n      this.setState({listOfObjects: \"three\"})\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        \n        <div id=\"text-input\">\n            <input type=\"text\" id=\"text-box\" placeholder=\"Write something to add\"></input>\n            <button id=\"btn-add\" className=\"input-button\"onClick={this.addButtonHandler}>Add</button>\n            <button id=\"btn-select-all\" className=\"input-button\">Select/Deselect All</button>\n            <button id=\"btn-delete-selected\" className=\"input-button\">Delete Selected</button>\n            <button id=\"btn-delete-completed\" className=\"input-button\">Delete Completed</button>\n        </div>\n\n        <div id=\"list-container\">\n            <ListTemplate text={this.state.listOfObjects}></ListTemplate>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}