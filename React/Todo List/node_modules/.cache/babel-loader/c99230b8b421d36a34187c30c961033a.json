{"ast":null,"code":"import _classCallCheck from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tekion/Documents/react-app/src/js/TodoManager.js\";\nimport React from 'react';\nimport '../css/TodoManager.css';\nimport TodoActionBar from './TodoActionBar';\nimport ListContainer from './ListContainer';\n\nvar TodoManager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoManager, _React$Component);\n\n  function TodoManager() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoManager)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todoItems: [],\n      todoInputTextValue: ''\n    };\n\n    _this.addItem = function () {\n      var newTodoItems = _this.state.todoItems.slice();\n\n      var todoText = _this.state.todoInputTextValue;\n      var todoID = new Date().getTime();\n      newTodoItems.push({\n        todoID: todoID,\n        todoText: todoText,\n        checkedStatus: false,\n        completedStatus: false\n      });\n\n      _this.setState({\n        todoItems: newTodoItems,\n        todoInputTextValue: ''\n      });\n    };\n\n    _this.deleteSelected = function () {\n      var newTodoItems = _this.state.todoItems.slice();\n\n      newTodoItems = newTodoItems.filter(function (item) {\n        return !item.checkedStatus;\n      });\n    };\n\n    _this.onInputTextChange = function (event) {\n      _this.setState({\n        todoInputTextValue: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoManager, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"todo-manager\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(TodoActionBar, {\n        textValue: this.state.todoInputTextValue,\n        onInputTextChange: this.onInputTextChange,\n        addItem: this.addItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(ListContainer, {\n        todoItems: this.state.todoItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoManager;\n}(React.Component);\n\nexport default TodoManager;","map":{"version":3,"sources":["/Users/tekion/Documents/react-app/src/js/TodoManager.js"],"names":["React","TodoActionBar","ListContainer","TodoManager","state","todoItems","todoInputTextValue","addItem","newTodoItems","slice","todoText","todoID","Date","getTime","push","checkedStatus","completedStatus","setState","deleteSelected","filter","item","onInputTextChange","event","target","value","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;IAEMC,W;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,kBAAkB,EAAE;AAFhB,K;;UAMRC,O,GAAU,YAAM;AACZ,UAAIC,YAAY,GAAG,MAAKJ,KAAL,CAAWC,SAAX,CAAqBI,KAArB,EAAnB;;AACA,UAAIC,QAAQ,GAAG,MAAKN,KAAL,CAAWE,kBAA1B;AACA,UAAIK,MAAM,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAb;AACAL,MAAAA,YAAY,CAACM,IAAb,CAAkB;AAACH,QAAAA,MAAM,EAACA,MAAR;AAAgBD,QAAAA,QAAQ,EAAEA,QAA1B;AAAoCK,QAAAA,aAAa,EAAE,KAAnD;AAA0DC,QAAAA,eAAe,EAAE;AAA3E,OAAlB;;AACA,YAAKC,QAAL,CAAc;AAACZ,QAAAA,SAAS,EAAEG,YAAZ;AAA0BF,QAAAA,kBAAkB,EAAE;AAA9C,OAAd;AACH,K;;UAEDY,c,GAAiB,YAAM;AACnB,UAAIV,YAAY,GAAG,MAAKJ,KAAL,CAAWC,SAAX,CAAqBI,KAArB,EAAnB;;AACAD,MAAAA,YAAY,GAAGA,YAAY,CAACW,MAAb,CAAoB,UAACC,IAAD,EAAS;AACxC,eAAO,CAACA,IAAI,CAACL,aAAb;AACH,OAFc,CAAf;AAGH,K;;UAEDM,iB,GAAoB,UAACC,KAAD,EAAW;AAC3B,YAAKL,QAAL,CAAc;AAACX,QAAAA,kBAAkB,EAACgB,KAAK,CAACC,MAAN,CAAaC;AAAjC,OAAd;AACH,K;;;;;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAE,aAAF;AACA,QAAA,SAAS,EAAE,KAAKpB,KAAL,CAAWE,kBADtB;AAEA,QAAA,iBAAiB,EAAE,KAAKe,iBAFxB;AAGA,QAAA,OAAO,EAAE,KAAKd,OAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAMI,oBAAE,aAAF;AACA,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWC,SADtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QANJ,CADJ;AAYH;;;;EAxCqBL,KAAK,CAACyB,S;;AA2ChC,eAAetB,WAAf","sourcesContent":["import React from 'react';\nimport '../css/TodoManager.css'\nimport TodoActionBar from './TodoActionBar'\nimport ListContainer from './ListContainer'\n\nclass TodoManager extends React.Component {\n\n    state = {\n        todoItems: [],\n        todoInputTextValue: ''\n    };\n\n\n    addItem = () => {\n        let newTodoItems = this.state.todoItems.slice();\n        let todoText = this.state.todoInputTextValue;\n        let todoID = new Date().getTime();\n        newTodoItems.push({todoID:todoID, todoText: todoText, checkedStatus: false, completedStatus: false});\n        this.setState({todoItems: newTodoItems, todoInputTextValue: ''});\n    }\n\n    deleteSelected = () => {\n        let newTodoItems = this.state.todoItems.slice();\n        newTodoItems = newTodoItems.filter((item)=> {\n            return !item.checkedStatus;\n        })\n    }\n\n    onInputTextChange = (event) => {\n        this.setState({todoInputTextValue:event.target.value});\n    }\n\n    render() {\n        return (\n            <div className='todo-manager'>\n                < TodoActionBar \n                textValue={this.state.todoInputTextValue}\n                onInputTextChange={this.onInputTextChange}\n                addItem={this.addItem}\n                />\n                < ListContainer\n                todoItems={this.state.todoItems}\n                 />\n            </div>\n        );\n    }\n}\n\nexport default TodoManager;"]},"metadata":{},"sourceType":"module"}