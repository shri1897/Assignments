{"ast":null,"code":"import _classCallCheck from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tekion/Documents/react-app/src/js/TodoManager.js\";\nimport React from 'react';\nimport '../css/TodoManager.css';\nimport TodoActionBar from './TodoActionBar';\nimport ListContainer from './ListContainer';\n\nvar TodoManager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoManager, _React$Component);\n\n  function TodoManager() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoManager)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todoItems: [],\n      todoInputTextValue: ''\n    };\n\n    _this.addItem = function () {\n      var newTodoItems = _this.state.todoItems.slice();\n\n      var todoText = _this.state.todoInputTextValue;\n\n      if (todoText) {\n        var todoID = new Date().getTime();\n        newTodoItems.push({\n          todoID: todoID,\n          todoText: todoText,\n          checkedStatus: false,\n          completedStatus: false\n        });\n\n        _this.setState({\n          todoItems: newTodoItems,\n          todoInputTextValue: ''\n        });\n      }\n    };\n\n    _this.deleteSelected = function () {\n      var newTodoItems = _this.state.todoItems.slice();\n\n      newTodoItems = newTodoItems.filter(function (item) {\n        return !item.checkedStatus;\n      });\n\n      _this.setState({\n        todoItems: newTodoItems\n      });\n    };\n\n    _this.deleteCompleted = function () {\n      var newTodoItems = _this.state.todoItems.slice();\n\n      newTodoItems = newTodoItems.filter(function (item) {\n        return !item.checkedStatus;\n      });\n\n      _this.setState({\n        todoItems: newTodoItems\n      });\n    };\n\n    _this.onInputTextChange = function (event) {\n      _this.setState({\n        todoInputTextValue: event.target.value\n      });\n    };\n\n    _this.selectDeselectAll = function () {\n      var newTodoItems = _this.state.todoItems.slice();\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoManager, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"todo-manager\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(TodoActionBar, {\n        textValue: this.state.todoInputTextValue,\n        onInputTextChange: this.onInputTextChange,\n        addItem: this.addItem,\n        deleteSelected: this.deleteSelected,\n        deleteCompleted: this.deleteCompleted,\n        selectDeselectAll: this.selectDeselectAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(ListContainer, {\n        todoItems: this.state.todoItems,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoManager;\n}(React.Component);\n\nexport default TodoManager;","map":{"version":3,"sources":["/Users/tekion/Documents/react-app/src/js/TodoManager.js"],"names":["React","TodoActionBar","ListContainer","TodoManager","state","todoItems","todoInputTextValue","addItem","newTodoItems","slice","todoText","todoID","Date","getTime","push","checkedStatus","completedStatus","setState","deleteSelected","filter","item","deleteCompleted","onInputTextChange","event","target","value","selectDeselectAll","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;IAEMC,W;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE,EADP;AAEJC,MAAAA,kBAAkB,EAAE;AAFhB,K;;UAMRC,O,GAAU,YAAM;AACZ,UAAIC,YAAY,GAAG,MAAKJ,KAAL,CAAWC,SAAX,CAAqBI,KAArB,EAAnB;;AACA,UAAIC,QAAQ,GAAG,MAAKN,KAAL,CAAWE,kBAA1B;;AACA,UAAII,QAAJ,EAAc;AACV,YAAIC,MAAM,GAAG,IAAIC,IAAJ,GAAWC,OAAX,EAAb;AACAL,QAAAA,YAAY,CAACM,IAAb,CAAkB;AAAEH,UAAAA,MAAM,EAAEA,MAAV;AAAkBD,UAAAA,QAAQ,EAAEA,QAA5B;AAAsCK,UAAAA,aAAa,EAAE,KAArD;AAA4DC,UAAAA,eAAe,EAAE;AAA7E,SAAlB;;AACA,cAAKC,QAAL,CAAc;AAAEZ,UAAAA,SAAS,EAAEG,YAAb;AAA2BF,UAAAA,kBAAkB,EAAE;AAA/C,SAAd;AACH;AACJ,K;;UAEDY,c,GAAiB,YAAM;AACnB,UAAIV,YAAY,GAAG,MAAKJ,KAAL,CAAWC,SAAX,CAAqBI,KAArB,EAAnB;;AACAD,MAAAA,YAAY,GAAGA,YAAY,CAACW,MAAb,CAAoB,UAACC,IAAD,EAAU;AACzC,eAAO,CAACA,IAAI,CAACL,aAAb;AACH,OAFc,CAAf;;AAGA,YAAKE,QAAL,CAAc;AAAEZ,QAAAA,SAAS,EAAEG;AAAb,OAAd;AACH,K;;UAEDa,e,GAAkB,YAAM;AACpB,UAAIb,YAAY,GAAG,MAAKJ,KAAL,CAAWC,SAAX,CAAqBI,KAArB,EAAnB;;AACAD,MAAAA,YAAY,GAAGA,YAAY,CAACW,MAAb,CAAoB,UAACC,IAAD,EAAU;AACzC,eAAO,CAACA,IAAI,CAACL,aAAb;AACH,OAFc,CAAf;;AAGA,YAAKE,QAAL,CAAc;AAAEZ,QAAAA,SAAS,EAAEG;AAAb,OAAd;AACH,K;;UAEDc,iB,GAAoB,UAACC,KAAD,EAAW;AAC3B,YAAKN,QAAL,CAAc;AAAEX,QAAAA,kBAAkB,EAAEiB,KAAK,CAACC,MAAN,CAAaC;AAAnC,OAAd;AACH,K;;UAEDC,iB,GAAoB,YAAM;AACtB,UAAIlB,YAAY,GAAG,MAAKJ,KAAL,CAAWC,SAAX,CAAqBI,KAArB,EAAnB;AACH,K;;;;;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAE,aAAF;AACI,QAAA,SAAS,EAAE,KAAKL,KAAL,CAAWE,kBAD1B;AAEI,QAAA,iBAAiB,EAAE,KAAKgB,iBAF5B;AAGI,QAAA,OAAO,EAAE,KAAKf,OAHlB;AAII,QAAA,cAAc,EAAE,KAAKW,cAJzB;AAKI,QAAA,eAAe,EAAE,KAAKG,eAL1B;AAMI,QAAA,iBAAiB,EAAE,KAAKK,iBAN5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EASI,oBAAE,aAAF;AACI,QAAA,SAAS,EAAE,KAAKtB,KAAL,CAAWC,SAD1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QATJ,CADJ;AAeH;;;;EA1DqBL,KAAK,CAAC2B,S;;AA6DhC,eAAexB,WAAf","sourcesContent":["import React from 'react';\nimport '../css/TodoManager.css'\nimport TodoActionBar from './TodoActionBar'\nimport ListContainer from './ListContainer'\n\nclass TodoManager extends React.Component {\n\n    state = {\n        todoItems: [],\n        todoInputTextValue: ''\n    };\n\n\n    addItem = () => {\n        let newTodoItems = this.state.todoItems.slice();\n        let todoText = this.state.todoInputTextValue;\n        if (todoText) {\n            let todoID = new Date().getTime();\n            newTodoItems.push({ todoID: todoID, todoText: todoText, checkedStatus: false, completedStatus: false });\n            this.setState({ todoItems: newTodoItems, todoInputTextValue: '' });\n        }\n    }\n\n    deleteSelected = () => {\n        let newTodoItems = this.state.todoItems.slice();\n        newTodoItems = newTodoItems.filter((item) => {\n            return !item.checkedStatus;\n        });\n        this.setState({ todoItems: newTodoItems });\n    }   \n\n    deleteCompleted = () => {\n        let newTodoItems = this.state.todoItems.slice();\n        newTodoItems = newTodoItems.filter((item) => {\n            return !item.checkedStatus;\n        });\n        this.setState({ todoItems: newTodoItems });\n    }\n\n    onInputTextChange = (event) => {\n        this.setState({ todoInputTextValue: event.target.value });\n    }\n\n    selectDeselectAll = () => {\n        let newTodoItems = this.state.todoItems.slice();\n    }\n\n    render() {\n        return (\n            <div className='todo-manager'>\n                < TodoActionBar\n                    textValue={this.state.todoInputTextValue}\n                    onInputTextChange={this.onInputTextChange}\n                    addItem={this.addItem}\n                    deleteSelected={this.deleteSelected}\n                    deleteCompleted={this.deleteCompleted}\n                    selectDeselectAll={this.selectDeselectAll}\n                />\n                < ListContainer\n                    todoItems={this.state.todoItems}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TodoManager;"]},"metadata":{},"sourceType":"module"}