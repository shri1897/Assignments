{"ast":null,"code":"import _classCallCheck from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tekion/Documents/react-app/src/js/TodoManager.js\";\nimport React from 'react';\nimport '../css/TodoManager.css';\nimport TodoActionBar from './TodoActionBar';\nimport ListContainer from './ListContainer';\n\nvar TodoManager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoManager, _React$Component);\n\n  function TodoManager() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoManager)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todoItems: JSON.parse(localStorage.getItem('com.reactjs.todolist')) || [],\n      todoInputTextValue: ''\n    };\n\n    _this.addItem = function () {\n      var todoItems = _this.state.todoItems.slice();\n\n      var todoText = _this.state.todoInputTextValue;\n\n      if (todoText) {\n        var todoID = new Date().getTime();\n        todoItems.push({\n          todoID: todoID,\n          todoText: todoText,\n          checkedStatus: false,\n          completedStatus: false\n        });\n\n        _this.setState({\n          todoItems: todoItems,\n          todoInputTextValue: ''\n        });\n      }\n    };\n\n    _this.deleteItem = function (event) {\n      var todoItems = _this.state.todoItems.slice();\n\n      var itemID = parseInt(event.target.closest('.list-item').getAttribute('todo-id'));\n      todoItems = todoItems.filter(function (item) {\n        return item.todoID !== itemID;\n      });\n\n      _this.setState({\n        todoItems: todoItems\n      });\n    };\n\n    _this.selectDeselectAll = function () {\n      var todoItems = _this.state.todoItems.slice();\n\n      if (todoItems[0]) {\n        var check = !todoItems[0].checkedStatus;\n        todoItems.map(function (item) {\n          item.checkedStatus = check;\n          return true;\n        });\n\n        _this.setState({\n          todoItems: todoItems\n        });\n      }\n    };\n\n    _this.deleteSelected = function () {\n      var todoItems = _this.state.todoItems.slice();\n\n      todoItems = todoItems.filter(function (item) {\n        return !item.checkedStatus;\n      });\n\n      _this.setState({\n        todoItems: todoItems\n      });\n    };\n\n    _this.deleteCompleted = function () {\n      var todoItems = _this.state.todoItems.slice();\n\n      todoItems = todoItems.filter(function (item) {\n        return !item.completedStatus;\n      });\n\n      _this.setState({\n        todoItems: todoItems\n      });\n    };\n\n    _this.handleInputTextChange = function (event) {\n      _this.setState({\n        todoInputTextValue: event.target.value\n      });\n    };\n\n    _this.handleCheckedStatusChange = function (event) {\n      var todoItems = _this.state.todoItems.slice();\n\n      var itemID = parseInt(event.target.closest('.list-item').getAttribute('todo-id'));\n      todoItems.map(function (item) {\n        if (item.todoID === itemID) {\n          item.checkedStatus = event.target.checked;\n        }\n\n        return true;\n      });\n\n      _this.setState({\n        todoItems: todoItems\n      });\n    };\n\n    _this.handleCompletedStatusChange = function (event) {\n      var todoItems = _this.state.todoItems.slice();\n\n      var itemID = parseInt(event.target.closest('.list-item').getAttribute('todo-id'));\n      todoItems.map(function (item) {\n        if (item.todoID === itemID) {\n          item.completedStatus = !item.completedStatus;\n        }\n\n        return true;\n      });\n\n      _this.setState({\n        todoItems: todoItems\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoManager, [{\n    key: \"render\",\n    value: function render() {\n      localStorage.setItem('com.reactjs.todolist', JSON.stringify(this.state.listOfObjects));\n      return React.createElement(\"div\", {\n        className: \"todo-manager\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(TodoActionBar, {\n        textValue: this.state.todoInputTextValue,\n        handleInputTextChange: this.handleInputTextChange,\n        addItem: this.addItem,\n        deleteSelected: this.deleteSelected,\n        deleteCompleted: this.deleteCompleted,\n        selectDeselectAll: this.selectDeselectAll,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }), React.createElement(ListContainer, {\n        todoItems: this.state.todoItems,\n        deleteItem: this.deleteItem,\n        handleCheckedStatusChange: this.handleCheckedStatusChange,\n        handleCompletedStatusChange: this.handleCompletedStatusChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoManager;\n}(React.Component);\n\nexport default TodoManager;","map":{"version":3,"sources":["/Users/tekion/Documents/react-app/src/js/TodoManager.js"],"names":["React","TodoActionBar","ListContainer","TodoManager","state","todoItems","JSON","parse","localStorage","getItem","todoInputTextValue","addItem","slice","todoText","todoID","Date","getTime","push","checkedStatus","completedStatus","setState","deleteItem","event","itemID","parseInt","target","closest","getAttribute","filter","item","selectDeselectAll","check","map","deleteSelected","deleteCompleted","handleInputTextChange","value","handleCheckedStatusChange","checked","handleCompletedStatusChange","setItem","stringify","listOfObjects","Component"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../css/TodoManager.css'\nimport TodoActionBar from './TodoActionBar'\nimport ListContainer from './ListContainer'\n\nclass TodoManager extends React.Component {\n\n    state = {\n        todoItems: JSON.parse(localStorage.getItem('com.reactjs.todolist')) || [],\n        todoInputTextValue: ''\n    };\n\n    addItem = () => {\n        let todoItems = this.state.todoItems.slice();\n        let todoText = this.state.todoInputTextValue;\n        if (todoText) {\n            let todoID = new Date().getTime();\n            todoItems.push({ todoID: todoID, todoText: todoText, checkedStatus: false, completedStatus: false });\n            this.setState({ todoItems: todoItems, todoInputTextValue: '' });\n        }\n    }\n\n    deleteItem = (event) => {\n        let todoItems = this.state.todoItems.slice();\n        let itemID = parseInt(event.target.closest('.list-item').getAttribute('todo-id'));\n        todoItems = todoItems.filter(item => {\n            return item.todoID !==  itemID;\n        });\n        this.setState({todoItems: todoItems})\n    }\n\n    selectDeselectAll = () => {\n        let todoItems = this.state.todoItems.slice();\n        if (todoItems[0]) {\n            let check = !todoItems[0].checkedStatus;\n            todoItems.map((item)=>{\n                item.checkedStatus = check;\n                return true;\n            });\n            this.setState({todoItems:todoItems})\n        }\n    }\n\n    deleteSelected = () => {\n        let todoItems = this.state.todoItems.slice();\n        todoItems = todoItems.filter((item) => {\n            return !item.checkedStatus;\n        });\n        this.setState({ todoItems: todoItems });\n    }\n\n    deleteCompleted = () => {\n        let todoItems = this.state.todoItems.slice();\n        todoItems = todoItems.filter((item) => {\n            return !item.completedStatus;\n        });\n        this.setState({ todoItems: todoItems });\n    }\n\n    handleInputTextChange = (event) => {\n        this.setState({ todoInputTextValue: event.target.value });\n    }\n\n    handleCheckedStatusChange = (event) => {\n        let todoItems = this.state.todoItems.slice();\n        let itemID = parseInt(event.target.closest('.list-item').getAttribute('todo-id'));\n        todoItems.map(item => {\n            if(item.todoID ===  itemID) {\n                item.checkedStatus = event.target.checked;\n            }\n            return true;\n        });\n        this.setState({todoItems: todoItems})\n    }\n\n    handleCompletedStatusChange = (event) => {\n        let todoItems = this.state.todoItems.slice();\n        let itemID = parseInt(event.target.closest('.list-item').getAttribute('todo-id'));\n        todoItems.map(item => {\n            if(item.todoID ===  itemID) {\n                item.completedStatus = !item.completedStatus;\n            }\n            return true;\n        });\n        this.setState({todoItems: todoItems})\n    }\n\n    render() {\n        localStorage.setItem('com.reactjs.todolist', JSON.stringify(this.state.listOfObjects));\n        return (\n            <div className='todo-manager'>\n                < TodoActionBar\n                    textValue={this.state.todoInputTextValue}\n                    handleInputTextChange={this.handleInputTextChange}\n                    addItem={this.addItem}\n                    deleteSelected={this.deleteSelected}\n                    deleteCompleted={this.deleteCompleted}\n                    selectDeselectAll={this.selectDeselectAll}\n                />\n                < ListContainer\n                    todoItems={this.state.todoItems}\n                    deleteItem={this.deleteItem}\n                    handleCheckedStatusChange={this.handleCheckedStatusChange}\n                    handleCompletedStatusChange={this.handleCompletedStatusChange}\n                />\n            </div>\n        );\n    }\n}\n\nexport default TodoManager;"]},"metadata":{},"sourceType":"module"}