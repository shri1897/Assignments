{"ast":null,"code":"import _classCallCheck from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/tekion/Documents/react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/tekion/Documents/react-app/src/js/TodoManager.js\";\nimport React from 'react';\nimport '../css/TodoManager.css';\nimport TodoActionBar from './TodoActionBar';\nimport ListContainer from './ListContainer';\n\nvar TodoManager =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TodoManager, _React$Component);\n\n  function TodoManager() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, TodoManager);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(TodoManager)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      todoItems: []\n    };\n\n    _this.addItem = function () {\n      var newState = _this.state.slice();\n\n      var todoText = _this.newState.inputTextValue;\n      newState.todoItems.push({});\n    };\n\n    _this.onInputTextChange = function (event) {\n      _this.setState({\n        todoTextValue: event.target.value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(TodoManager, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"todo-manager\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, React.createElement(TodoActionBar, {\n        onInputTextChange: this.onInputTextChange,\n        addItem: this.addItem,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(ListContainer, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return TodoManager;\n}(React.Component);\n\nexport default TodoManager;","map":{"version":3,"sources":["/Users/tekion/Documents/react-app/src/js/TodoManager.js"],"names":["React","TodoActionBar","ListContainer","TodoManager","state","todoItems","addItem","newState","slice","todoText","inputTextValue","push","onInputTextChange","event","setState","todoTextValue","target","value","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,wBAAP;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;IAEMC,W;;;;;;;;;;;;;;;;;UAEFC,K,GAAQ;AACJC,MAAAA,SAAS,EAAE;AADP,K;;UAIRC,O,GAAU,YAAM;AACZ,UAAIC,QAAQ,GAAG,MAAKH,KAAL,CAAWI,KAAX,EAAf;;AACA,UAAIC,QAAQ,GAAG,MAAKF,QAAL,CAAcG,cAA7B;AACAH,MAAAA,QAAQ,CAACF,SAAT,CAAmBM,IAAnB,CAAwB,EAAxB;AAEH,K;;UAEDC,iB,GAAoB,UAACC,KAAD,EAAW;AAC3B,YAAKC,QAAL,CAAc;AAACC,QAAAA,aAAa,EAACF,KAAK,CAACG,MAAN,CAAaC;AAA5B,OAAd;AACH,K;;;;;;;6BAEQ;AACL,aACI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAE,aAAF;AACA,QAAA,iBAAiB,EAAE,KAAKL,iBADxB;AAEA,QAAA,OAAO,EAAE,KAAKN,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAKI,oBAAE,aAAF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QALJ,CADJ;AASH;;;;EA3BqBN,KAAK,CAACkB,S;;AA8BhC,eAAef,WAAf","sourcesContent":["import React from 'react';\nimport '../css/TodoManager.css'\nimport TodoActionBar from './TodoActionBar'\nimport ListContainer from './ListContainer'\n\nclass TodoManager extends React.Component {\n\n    state = {\n        todoItems: []\n    };\n\n    addItem = () => {\n        let newState = this.state.slice();\n        let todoText = this.newState.inputTextValue;\n        newState.todoItems.push({})\n\n    }\n\n    onInputTextChange = (event) => {\n        this.setState({todoTextValue:event.target.value});\n    }\n\n    render() {\n        return (\n            <div className='todo-manager'>\n                < TodoActionBar \n                onInputTextChange={this.onInputTextChange}\n                addItem={this.addItem}\n                />\n                < ListContainer />\n            </div>\n        );\n    }\n}\n\nexport default TodoManager;"]},"metadata":{},"sourceType":"module"}